#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

typedef uint8_t BYTE;

int main(int argc, char *argv[])
{
    //CHECK CLI FOR ONE ARGUMENT
    if (argc != 2)
    {
        printf("Correct usage: ./recover image\n");
        return 1;
    }


    //OPEN argv1 file TO READ FROM IT, initialize as *file
    //FILE *file = fopen(argv[1], "r");


    //create empty buffer array
    BYTE buffer[512];
    //BYTE *bufferptr = &buffer;

    //jpegs found count
    int jpegCount = 0;

    //open card.raw
    FILE *file = fopen(argv[1], "r");
    FILE *newImage;
    char newFileName[3];

    //repeat until end of card
    while (fread(buffer, 1, 512, file) == 512)
    {

        if (buffer[0] == 0xff && buffer[1] == 0xd8 && buffer[2] == 0xff && ((buffer[3] & 0xf0) == 0xe0)) //if start of jpeg
        {
            if (jpegCount > 0)
            {
                fclose(newImage); //close previously opened file
            }

            sprintf(newFileName, "%03i.jpg", jpegCount); //create string for new file name
            newImage = fopen(newFileName, "w"); //open new file with new file name
            fwrite(buffer, 1, 512, newImage);

            jpegCount++;

        }
        else if (jpegCount > 0)
        {
            fwrite(buffer, 1, 512, newImage);
        }
    }

    return 0;
}
